// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Kyoku {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String    @db.VarChar(255)
  artist    Artist    @relation(fields: [artistId], references: [id])
  artistId  Int
  comments  Comment[]
}

model Artist {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(255)
  kyokus    Kyoku[]
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    @unique @db.VarChar(255)
  comments  Comment[]
  userAuth  UserAuth?
}

model UserAuth {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  hashedPassword String
  user           User     @relation(fields: [userId], references: [id])
  userId         Int      @unique
}

model Comment {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  body       String      @db.VarChar(255)
  author     User        @relation(fields: [authorId], references: [id])
  authorId   Int
  kyoku      Kyoku       @relation(fields: [kyokuId], references: [id])
  kyokuId    Int
  reputation Reputation?
}

model Reputation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  points    Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int      @unique
}
